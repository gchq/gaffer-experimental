kind: Template
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: prometheus
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: prometheus
    name: prometheus
  spec:
    ports:
    - name: 9090-tcp
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      deployment: prometheus
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "13"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"prometheus:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"prometheus\")].image"}]'
      openshift.io/generated-by: OpenShiftNewApp
    generation: 29
    labels:
      app: prometheus
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: prometheus
    name: prometheus
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        deployment: prometheus
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deployment: prometheus
      spec:
        containers:
        - image: prom/prometheus
          imagePullPolicy: IfNotPresent
          name: prometheus
          ports:
          - containerPort: 9090
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/prometheus/
            name: prometheus-volume-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus
          name: prometheus-volume-1
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: prometheus
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: prometheus
    name: prometheus
  spec:
    port:
      targetPort: 9090-tcp
    to:
      kind: Service
      name: prometheus
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: prometheus
  data:
    prometheus.yml: |-
      global:
        scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
        evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
        # scrape_timeout is set to the global default (10s).

      scrape_configs:
        - job_name: 'gaas-rest-api'
          metrics_path: '/actuator/prometheus'
          scrape_interval: 5s
          static_configs:
            - targets: ['localhost:8080']